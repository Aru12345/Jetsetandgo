function AddReviewForm({onAddReview}){

  const history = useHistory()
  const params=useParams()
  
  const [reviewData, setreviewData] = useState({
    
    image:'',
    date:'',
    destination:'',
    seat:'',
    description:'',
    
  })
  function handleReviewChange(event){
    setreviewData({
        ...reviewData,
        [event.target.name]: event.target.value,

    });
}
function handleReviewSubmit(event) {
    event.preventDefault();
 
    const newReview ={
        ...reviewData,
        airline_id:params.airline_id
    };

    fetch(`/reviews`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(newReview),
    })
      .then((r) => r.json())
      .then(onAddReview);
      history.goBack()
     
    

  }

    return(
        <>
            <form onSubmit={handleReviewSubmit} >
           <h2>Add a Review</h2>
           <label>Image:</label>
           <input type="text" name="image" aria-label="image" value={reviewData.image} onChange={handleReviewChange}  ></input>
           
           <label>Date:</label>
           <input type="text" name="date" aria-label="date" value={reviewData.date} onChange={handleReviewChange} ></input>
           
           <label>Destination:</label>
           <input type="text" name="destination" aria-label="destination" value={reviewData.destination}  onChange={handleReviewChange}></input>
           
           <label>Seat:</label>
           <input type="text" name="seat" aria-label="seat" value={reviewData.seat}  onChange={handleReviewChange}></input>

           <label>Description:</label>
           <input type="text" name="description" aria-label="description" value={reviewData.description}  onChange={handleReviewChange}></input>
           
          
           <input class="submit" type="submit" />
            </form>
       
        </>
    )
}
export default AddReviewForm;